//variables to setup basic size and shape of the card and pips
$card-width: 40vw;
$card-height: $card-width*1.4;
$font-size-number: $card-width * 0.1;
$icon-size: $card-width / 5;

*,
*:before,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

//styles to draw a basic outline of a card
.card {
    border: 1px solid grey;
    height: $card-height;
    width: $card-width;
    border-radius: 10px;
    margin: 20px;
    box-shadow: 2px 2px 4px grey;
}

//because it is a card front we want a bit of extra padding
.card-front {
    padding: .5em;
}




//set icon size
.icon {
    width: $icon-size;
    height: $icon-size;
}

.number {
    text-align: center;
    font-size: $font-size-number;
  //an icon that is part of a number should be half the normal size
    & > .icon {
        width: $icon-size * .5;
        height: $icon-size *.5;
    }
}

//rotate bottom pips 180deg
.rotate {
    transform: rotate(180deg);
}

.row {
    display: grid;
    grid-template-columns: 1fr repeat(3, 2fr) 1fr;
    grid-template-rows: repeat(4, 1fr);
    align-items: center;
    align-content: space-between;
    height: 100%
}
/* 
//the code below is the css code output for the following scss code
.col-1 {
    grid-column: 1 / 2;
}
.col-2 {
    grid-column: 2 / 3;
}
.col-3 {
    grid-column: 3/ 4;
}
.col-4 {
    grid-column: 4/ 5;
}
.col-5 {
    grid-column: 5 / 6;
}

.row-1{
    grid-row: 1 / 2;
}
.row-2 {
    grid-row: 2 / 3;
}
.row-3 {
    grid-row: 3 / 4;
}
.row-4 {
    grid-row: 4 / 5;
}
*/
$possition-start: 1;

@mixin col($possition-start) {
    grid-column-start: $possition-start;
    grid-column-end: $possition-start + 1;
}
@mixin row($possition-start){
    grid-row-start: $possition-start;
    grid-row-end: $possition-start + 1;
}

@for $index from 1 to 5 {
    .col-#{$index}{
        @include col($index);
    }
}
@for $index from 1 to 4 {
    .row-#{index} {
        @include row($index);
    }
}